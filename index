<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Multi-Timer Countdown</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #f2f2f2;
    }
    .timer-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 20px;
      margin-top: 20px;
    }
    .timer {
      width: 200px;
      padding: 10px;
      border: 2px solid #333;
      border-radius: 8px;
      background-color: #4CAF50;
      color: #fff;
      transition: background-color 0.5s ease-in-out;
    }
    .timer.alert {
      background-color: #8B0000; /* Dark red */
      animation: flicker 1s infinite alternate;
    }
    .logo-container {
      margin-top: 50px;
    }
    .logo {
      width: 200px;
      height: 200px;
    }
    @keyframes flicker {
      0% { opacity: 0.5; }
      100% { opacity: 1; }
    }
  </style>
</head>
<body>

<div class="timer-container" id="timer-container"></div>
<div class="logo-container" id="logo-container"></div>

<script>
  function displayMessage(message, times) {
    const timerElement = document.getElementById('timer-container');
    let counter = 0;

    function showMessage() {
      const messageElement = document.createElement('div');
      messageElement.classList.add('timer', 'alert');
      messageElement.innerHTML = `<strong>${message}</strong>`;
      timerElement.appendChild(messageElement);
      counter++;

      if (counter < times) {
        setTimeout(() => {
          messageElement.style.display = 'none';
          setTimeout(showMessage, 500); // Adjust the delay between messages if needed
        }, 500);
      }
    }

    showMessage();
  }

  function startTimers() {
    const timerContainer = document.getElementById('timer-container');
    const logoContainer = document.getElementById('logo-container');

    function updateTimers() {
      const now = new Date();
      const currentDay = now.getDay(); // 0 for Sunday, 1 for Monday, etc.
      const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;

      const timers = [
        { name: 'Basketball', days: [1, 6], time: '18:00', duration: 30 },
        { name: 'ADP', days: [2, 4, 6], time: '17:00', duration: 60 },
        { name: 'Gymnastics', days: [3], time: '18:00', duration: 50 },
        { name: 'Swimming', days: [0], time: '16:00', duration: 40 },
      ];

      // Sort timers by the time remaining in descending order
      timers.sort((a, b) => {
        const aTimeRemaining = (a.duration - 45) * 60;
        const bTimeRemaining = (b.duration - 45) * 60;
        return bTimeRemaining - aTimeRemaining;
      });

      // Clear existing timers and logo
      timerContainer.innerHTML = '';
      logoContainer.innerHTML = '';

      // Check if any timer is active
      let isTimerActive = false;

      timers.forEach(timer => {
        if (timer.days.includes(currentDay) && currentTime === timer.time) {
          const timerElement = document.createElement('div');
          timerElement.classList.add('timer');
          timerContainer.appendChild(timerElement);

          let timeRemaining = (timer.duration - 45) * 60; // Start 45 minutes before

          setInterval(() => {
            const minutes = Math.floor(timeRemaining / 60);
            const seconds = timeRemaining % 60;

            if (timeRemaining <= 600) {
              timerElement.style.backgroundColor = '#FF6347'; // Red
              if (timeRemaining === 300) {
                displayMessage('Time to go', 3); // Display "Time to go" three times when timer is up
                timerElement.classList.add('alert');
              }
            } else if (timeRemaining <= 1200) {
              timerElement.style.backgroundColor = '#FFD700'; // Yellow
            }

            timerElement.innerHTML = `<strong>${timer.name}</strong><br>${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
            timeRemaining--;

            if (timeRemaining < 0) {
              timerElement.innerHTML = `<strong>${timer.name}</strong><br>Time's up!`;
              isTimerActive = true;
            }
          }, 1000);
        }
      });

      // If no timer is active, display the logo
      if (!isTimerActive) {
        const logoElement = document.createElement('img');
        logoElement.src = 'timesUP_logo.png'; // Replace with the path to your logo image
        logoElement.alt = 'timesUP Logo';
        logoElement.classList.add('logo');
        logoContainer.appendChild(logoElement);
      }
    }

    // Update timers every second
    setInterval(updateTimers, 1000);
  }

  startTimers();
</script>

</body>
</html>
